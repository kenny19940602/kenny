server:
  port: 8401
spring:
  application:
    name: sentinel-service
  cloud:
    sentinel:
      datasource:
        ds1:
          nacos:
            server-addr: localhost:8848
            dataId: ${spring.application.name}-sentinel
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: flow
      transport:
        dashboard: localhost:8080 #配置sentinel dashboard地址
        port: 8719
#management:
#  endpoints:
#    web:
#      exposure:
#        include: '*'
#与Feign结合使用
feign:
  sentinel:
    enabled: true #打开sentinel对feign的支持
#默认情况下，当我们在Sentinel控制台中配置规则时，控制台推送规则方式是通过API将规则推送至客户端并直接更新到内存中。一旦我们重启应用，规则将消失。下面我们介绍下如何将配置规则进行持久化，以存储到Nacos为例。
#首先我们直接在配置中心创建规则，配置中心将规则推送到客户端；
#Sentinel控制台也从配置中心去获取配置信息。
#sentinel-service-sentinel.json
#[
#    {
#        "resource": "/rateLimit/byUrl",
#        "limitApp": "default",
#        "grade": 1,
#        "count": 1,
#        "strategy": 0,
#        "controlBehavior": 0,
#        "clusterMode": false
#    }
#]
#resource：资源名称；
#limitApp：来源应用；
#grade：阈值类型，0表示线程数，1表示QPS；
#count：单机阈值；
#strategy：流控模式，0表示直接，1表示关联，2表示链路；
#controlBehavior：流控效果，0表示快速失败，1表示Warm Up，2表示排队等待；
#clusterMode：是否集群。
